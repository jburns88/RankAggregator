if(! drop.boot){  conr.boot[,k] <- conr.k$Rank[match(conr.est$Item, conr.k$Item)] }
}
######################################
## SUMMARY TABLE
## add summary statistics to output table
out.tab$Rank.cilo <- apply(conr.boot, 1, quantile, (1-conf.int)/2, na.rm=TRUE)
out.tab$Rank.cihi <- apply(conr.boot, 1, quantile, 1-(1-conf.int)/2, na.rm=TRUE)
out.tab$Rank.median <- apply(conr.boot, 1, median, na.rm=TRUE)
out.tab$Rank.mean <- apply(conr.boot, 1, mean, na.rm=TRUE)
}
print(out.tab)
if(bootstrap){
out.tab <- list(summaryTable = out.tab,
bootstrapData = conr.boot)
}
invisible(out.tab)
}
document()
help("RankAggregator")
help("rankAggregator")
document("D:/test/RankAggregator")
help("rankAggregator", package = "D:/test/RankAggregator")
help("rankAggregator", package = "RankAggregator")
help("RankAggregator", package = "RankAggregator")
document()
document("RankAggregator")
document("D:/test/RankAggregator")
document("RankAggregator")
document("D:/test/RankAggregator")
rm(list = c("consensusRanking", "evaluationMatrix", "extendRanking", "lowerBound", "rankAggregator", "upperBound"))
help("rankAggregator")
document("RankAggregator")
document("D:/test/RankAggregator")
help("rankAggregator")
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
help("cook_example")
document("D:/test/RankAggregator")
help("cook_example")
check("RankAggregator")
check()
document("D:/test/RankAggregator")
check("RankAggregator")
check()
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
document("D:/test/RankAggregator", clean = TRUE)
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
check()
check()
??use_gpl3_license()
document("D:/test/RankAggregator")
check()
document("D:/test/RankAggregator")
??RankAggregator
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
document("D:/test/RankAggregator")
help("RankAggregator")
help("cook_example")
help("rankAggregator")
help("RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("RankAggregator")
help("rankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
document("D:/test/RankAggregator")
help("consensusRanking")
help("RankAggregator")
help("rankAggregator")
??rankAggregator
??RankAggregator
help("rankAggregator")
help("evaluationMatrix")
help("rankAggregator")
document("D:/test/RankAggregator")
help("rankAggregator")
help("evaluationMatrix")
help("consensusRanking")
document("D:/test/RankAggregator")
document("D:/test/RankAggregator")
help("consensusRanking")
help("consensusRankingBoot")
document("D:/test/RankAggregator")
help("consensusRankingBoot")
document("D:/test/RankAggregator")
help("consensusRankingBoot")
document("D:/test/RankAggregator")
help("consensusRankingBoot")
document("D:/test/RankAggregator")
help("consensusRankingBoot")
document("D:/test/RankAggregator")
checks
check()
check()
check()
consensusRankingBoot(cook_example, bootstrap = F)
cook_example
library(tidyverse)
str(cook_example)
cook_example$Item <- as.character(cook_example$Item)
cook_example$Reviewer <- as.character(cook_example$Reviewer)
str(cook_example)
consensusRankingBoot(cook_example, bootstrap = F)
document()
View(consensusRanking)
View(consensusRankingBoot)
consensusRankingBoot(cook_example, bootstrap = F)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
document()
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
document()
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
prob.node
options(warn = 2)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
prob.node
prob.umat
umat <- prob.umat
node <- prob.node
out <- node$partial.ranking
out
length(which(! node$included)) <= 1
cmat <- umat[!node$included, !node$included]
cmat
nt <- nrow(cmat)
z <- integer(nt)
rs <- rowSums(cmat)
cs <- colSums(cmat)
rv.rmat <- rowSums(umat)/(rowSums(umat) + colSums(umat))
nt
z
rs
cs
rv.rmat
for (i in 1:(nt - 1)) {
if(sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0) {
rmk <- which.min(rs / (cs + rs))
z[i] <- names(rmk)
rs <- rs - cmat[, rmk]
cs <- cs - cmat[rmk,]
} else {
rmk.nan <- match(colnames(cmat[is.finite(cs), is.finite(cs)]),
colnames(cmat))
rmk <- which.min(rv.umat[rmk.nan])
z[i] <- names(rmk)
rmk <- match(names(rmk), names(cs))
}
cs[rmk] <- -Inf
rs[rmk] <- Inf
}
rv.umat <- rowSums(umat)/(rowSums(umat) + colSums(umat))
for (i in 1:(nt - 1)) {
if(sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0) {
rmk <- which.min(rs / (cs + rs))
z[i] <- names(rmk)
rs <- rs - cmat[, rmk]
cs <- cs - cmat[rmk,]
} else {
rmk.nan <- match(colnames(cmat[is.finite(cs), is.finite(cs)]),
colnames(cmat))
rmk <- which.min(rv.umat[rmk.nan])
z[i] <- names(rmk)
rmk <- match(names(rmk), names(cs))
}
cs[rmk] <- -Inf
rs[rmk] <- Inf
}
cs
rs
cs
cmat <- umat[!node$included, !node$included]
nt <- nrow(cmat)
z <- integer(nt)
rs <- rowSums(cmat)
cs <- colSums(cmat)
rv.umat <- rowSums(umat)/(rowSums(umat) + colSums(umat))
i <- 1
sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0
cs
rs
rmk <- which.min(rs / (cs + rs))
rmk
z[i] <- names(rmk)
rs <- rs - cmat[, rmk]
cs <- cs - cmat[rmk,]
rs
cs
cmat
rs
cs
rs - cmat[, rmk]
rs
cmat[, rmk]
cs[rmk] <- -Inf
rs[rmk] <- Inf
cs
rs
i <- 2
sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0
rmk <- which.min(rs / (cs + rs))
z[i] <- names(rmk)
rs <- rs - cmat[, rmk]
cs <- cs - cmat[rmk,]
rmk
cs[rmk] <- -Inf
rs[rmk] <- Inf
cs
rs
i <- 3
length(which(! node$included)) <= 1
sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0
rmk <- which.min(rs / (cs + rs))
z[i] <- names(rmk)
rs <- rs - cmat[, rmk]
cs <- cs - cmat[rmk,]
cs[rmk] <- -Inf
rs[rmk] <- Inf
cs
rs
sum(rs[is.finite(rs)], cs[is.finite(cs)])
sum(rs[is.finite(rs)], cs[is.finite(cs)]) != 0
rmk.nan <- match(colnames(cmat[is.finite(cs), is.finite(cs)]),
colnames(cmat))
rmk.nan
rmk <- which.min(rv.umat[rmk.nan])
rmk
rv.umat
rmk.nan <- match(colnames(cmat[is.finite(cs), is.finite(cs)]),
colnames(umat))
rmk.nan
document()
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 1000)
document()
nboot
10000/10
9999/10
round(9999/10)
9 %% 999
9 %% 900
9 %% 9000
9 %% 9
9 %% 19
9 %% 18
1000 %% 1000
1000 %% 2000
2000 %% 1000
3000 %% 1000
18 %% 9
9000%%9
9800%%9
9090%%9
9810%%9
1000/10000
1000/10000*100
9/18*100
is.numeric(0.)
is.integer(0.q)
is.integer(0.1)
is.integer(1)
is.integer(2)
0.1 %%1
0.1 %%1 ==0
1 %%1 ==0
2 %%1 ==0
3 %%1 ==0
99 %%1 ==0
99.9 %%1 ==0
99/10
round(99/10)
1:10
10:90
seq(10,90,10)
message("100% complete")
options(warn=0)
consensusRankingBoot(cook_example, bootstrap = F)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
document()
consensusRankingBoot(cook_example, bootstrap = F)
document()
consensusRankingBoot(cook_example, bootstrap = F)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
10%%1
document()
consensusRankingBoot(cook_example, bootstrap = F)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 1000)
document()
consensusRankingBoot(cook_example, bootstrap = F)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 10)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 100)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 1000)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 99)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 9)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 9.0)
consensusRankingBoot(cook_example, bootstrap = T, nboot = 9.8)
document()
document()
document()
use_citation()
document()
citation("RankAggregator")
check()
check()
document()
citation("RankAggregator")
build()
document()
build()#
build()
build()
build()
help("cook_example")
cook_example
str(cook_example)
help("cook_example")
load(cook_example)
load("cook_example")
load("D/test/RankAggregator/data/cook_example")
load("D/test/RankAggregator/data/")
load("D/test/RankAggregator/data")
load("D:/test/RankAggregator/data/cook_example.rda")
str(cook_example)
load("D:/test/RankAggregator/data/cook_example.rda")
str(cook_example)
cook_example$Item <- as.character(cook_example$Item)
cook_example$Reviewer <- as.character(cook_example$Reviewer)
## include data
use_data(cook_example, pkg = "RankAggregator")
library(devtools)
library(roxygen2)
## include data
use_data(cook_example, pkg = "RankAggregator")
dir
dir()
dir()
## include data
use_data(cook_example, pkg = "RankAggregator")
## include data
use_data(cook_example, pkg = "RankAggregator")
## include data
use_data(cook_example)
rm(cook_example)
load("D:/test/RankAggregator/data/cook_example.rda")
str(cook_example)
cook_example$Ranking <- as.numeric(cook_example$Ranking)
## include data
use_data(cook_example)
rm(cook_example)
load("D:/test/RankAggregator/data/cook_example.rda")
str(cook_example)
document()
build()
conf.int <- 1.1
! conf.int > 0
conf.int < 1
! conf.int > 0 & conf.int < 1
! conf.int > 0 & ! conf.int < 1
(conf.int > 0 & conf.int < 1)
! (conf.int > 0 & conf.int < 1)
document()
build()
use_vignette()
use_vignette(test)
use_vignette("test")
document()
check()
cook_example
library(tidyverse)
spread(cook_example)
spread(key = "key", value = "value")
spread(cook_example, key = "key", value = "value")
spread(cook_example, key = "reviewer", value = "item")
spread(cook_example, key = "Reviewer", value = "Item")
spread(cook_example, key = "Reviewer", value = "Ranking")
spread(cook_example, key = "Ranking", value = "Reviewer")
spread(cook_example, key = "Ranking", value = "Ranking")
spread(cook_example, key = "Reviewer", value = "Ranking")
spread(cook_example, key = "Item", value = "Ranking")
test <- spread(cook_example, key = "Item", value = "Ranking")
install.packages("ConsRank")
install.packages("ConsRank")
install.packages("ConsRank")
library(ConsRank)
BBFULL(test)
test <- as.matrix(test)
test
test <- spread(cook_example, key = "Item", value = "Ranking")
test <- tidyverse::spread(cook_example, key = "Item", value = "Ranking")
test <- dplyr::spread(cook_example, key = "Item", value = "Ranking")
library(tidyverse)
test <- spread(cook_example, key = "Item", value = "Ranking")
help("as.matrix")
test <- as.matrix(test, rownames = T)
test
BBFULL(test)
conrank(test)
consrank(test)
typeof(test)
test <- spread(cook_example, key = "Item", value = "Ranking")
consrank(test)
View(APAFULL)
data("APAFULL")
View(APAFULL)
typeof(APAFULL)
typeof(test)
data(sports)
View(sports)
typeof(sports)
data.matrix(test)
data.matrix(test, rownames.force = T)
data.matrix(test, rownames = T)
test <- test %>% column_to_rownames("Reviewer")
test
data.matrix(test, rownames.force = T)
test <- data.matrix(test, rownames.force = T)
conrank(test)
conarank(test)
consrank(test)
consrank(test, full = T)
library(readr)
dat_high6 <- read_csv("C:/Users/jburns/OneDrive - SRUC/BioSS/tables_plots_bb/final/dat_08.11.19.final/dat.high6.csv")
View(dat_high6)
dat_high6 <- dat_high6[,c(1:3)]
dat_high6 <- spread(dat_high6, key = "Trait", value = "Rank")
dat_high6 <- dat_high6 %>% column_to_rownames("Study")
dat_high6 <- data.matrix(dat_high6, rownames.force = T)
consrank(dat_high6, full = T)
detach("package:ConsRank", unload = TRUE)
detach("package:forcats", unload = TRUE)
librar(tidyverse)
library(tidyverse)
15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
10*10*10*10
10*10*10*10
10*10*10*10*10
6*12
75*5
test_frame<-tibble(x=c("a1!","b2@","c3$"), y=c("A1$","G2%", NA))
library(tidyverse)
test_frame<-tibble(x=c("a1!","b2@","c3$"), y=c("A1$","G2%", NA))
test_frame
spread(test_frame)
rm(test_frame)
document()
library(devtools)
library(roxygen2)
document()
check()
build()
document()
library(devtools)
library(roxygen2)
document()
check()
document()
check()
document()
check()
build()
library(devtools)
library(roxygen2)
document()
check()
build()
library(devtools)
library(roxygen2)
document()
build()
document()
check()
document()
check()
build()
35*305
32*305
R.version.string
update.packages(ask = FALSE, checkBuilt = TRUE)
citation("tidyverse")
citation("ConsRank")
